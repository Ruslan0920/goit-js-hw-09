{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SA6BpC,SAASC,EAAcC,EAAUC,GAG/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAC1CC,YAAW,KACHH,EAEFF,EAAQ,C,SAAEH,E,MAAUC,IAGpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE9BA,EAAM,G,CAzCTQ,QAAQC,IAAId,GAEZA,EAAKe,iBAAiB,UAEtB,SAAoBC,GAClBA,EAAMC,iBACN,MAAQZ,MAAAa,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAMK,cAAcC,SAGlD,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAOI,MAAOD,GAAG,EAAE,CACvCV,QAAQC,IAAIS,GACV,MAAME,EAAWF,EAAI,EACrBV,QAAQC,IAAIW,GACZ,MAAMC,EAASC,OAAOT,EAAMM,OAASL,EAAKK,MAAQD,EAClDV,QAAQC,IAAII,EAAMM,OAClBX,QAAQC,IAAIK,EAAKK,OAEvBrB,EAAcsB,EAAUC,GACrBE,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACjBwB,EAAA/B,GAASgC,OAAOC,QAAQ,uBAAqB3B,QAAiBC,OAAW,IAE1E2B,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MAClBwB,EAAA/B,GAASgC,OAAOG,QAAQ,sBAAoB7B,QAAiBC,OAAW,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector(\".form\");\nconsole.log(form);\n\nform.addEventListener(\"submit\", submitForm);\n\nfunction submitForm(event) {\n  event.preventDefault();\n  const { delay, step, amount } = event.currentTarget.elements;\n  // console.log(event.currentTarget.elements);\n    \n    for (let i = 0; i < amount.value; i+=1){\n    console.log(i);\n      const position = i + 1;\n      console.log(position);\n      const delays = Number(delay.value) + step.value * i;\n      console.log(delay.value);\n      console.log(step.value);\n       \ncreatePromise(position, delays)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay} ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay} ms`);\n  });\n  }\n}\n\n\nfunction createPromise(position, delay) {\n  // inputAmount.value = position;\n  // inputStep.value = delay;\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\nsetTimeout(() => {\n    if (shouldResolve) {\n      // Fulfill\n      resolve({ position, delay });\n    } else {\n      // Reject\n      reject({ position, delay });\n    }\n}, delay);\n  });\n\n}\n\n// createPromise(3, 1500)\n//   .then(({ position, delay }) => {\n//     Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","console","log","addEventListener","event","preventDefault","delay1","step","amount","currentTarget","elements","i","value","position1","delays","Number","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.5913b5f0.js.map"}